{"ast":null,"code":"import _objectSpread from\"C:/Users/KIIT0001/cursor projects/hackth/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{Container,Grid,Paper,Typography,Box,Card,CardContent,CircularProgress,Alert,Button,Chip,AppBar,Toolbar,Dialog,DialogTitle,DialogContent,DialogActions,TextField}from'@mui/material';import{TrendingUp,Security,Warning,CheckCircle,Add}from'@mui/icons-material';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[stats,setStats]=useState(null);const[recentTransactions,setRecentTransactions]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[newTransactionOpen,setNewTransactionOpen]=useState(false);const[newTransaction,setNewTransaction]=useState({amount:'',user_id:'',merchant_id:'',transaction_type:'credit_card'});const API_BASE='http://localhost:5000';useEffect(()=>{fetchDashboardData();const interval=setInterval(fetchDashboardData,5000);return()=>clearInterval(interval);},[]);const fetchDashboardData=async()=>{try{const[statsResponse,transactionsResponse]=await Promise.all([fetch(\"\".concat(API_BASE,\"/api/dashboard/stats\")),fetch(\"\".concat(API_BASE,\"/api/transactions/?per_page=10\"))]);const statsData=await statsResponse.json();const transactionsData=await transactionsResponse.json();setStats(statsData);setRecentTransactions(transactionsData.transactions||[]);setLoading(false);setError(null);}catch(err){setError('Failed to connect to backend. Make sure the server is running on port 5000.');setLoading(false);}};const generateSampleData=async()=>{try{setLoading(true);await fetch(\"\".concat(API_BASE,\"/api/transactions/sample\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({count:20})});await fetchDashboardData();}catch(err){setError('Failed to generate sample data');setLoading(false);}};const createTransaction=async()=>{try{const response=await fetch(\"\".concat(API_BASE,\"/api/transactions/\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({amount:parseFloat(newTransaction.amount),user_id:newTransaction.user_id,merchant_id:newTransaction.merchant_id,transaction_type:newTransaction.transaction_type})});if(response.ok){setNewTransactionOpen(false);setNewTransaction({amount:'',user_id:'',merchant_id:'',transaction_type:'credit_card'});await fetchDashboardData();}}catch(err){setError('Failed to create transaction');}};if(loading&&!stats){return/*#__PURE__*/_jsx(Container,{maxWidth:\"lg\",style:{marginTop:64},children:/*#__PURE__*/_jsxs(Box,{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\",minHeight:\"400px\",children:[/*#__PURE__*/_jsx(CircularProgress,{size:60}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",style:{marginTop:16},children:\"Loading Fraud Detection Dashboard...\"})]})});}const fraudRateColor=stats&&stats.fraud_rate>10?'error':stats&&stats.fraud_rate>5?'warning':'success';return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(AppBar,{position:\"fixed\",children:/*#__PURE__*/_jsxs(Toolbar,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"div\",style:{flexGrow:1},children:\"\\uD83D\\uDEE1\\uFE0F Fraud Detection Dashboard - Hackathon 2025\"}),/*#__PURE__*/_jsxs(Button,{color:\"inherit\",onClick:()=>setNewTransactionOpen(true),children:[/*#__PURE__*/_jsx(Add,{style:{marginRight:8}}),\"New Transaction\"]})]})}),/*#__PURE__*/_jsxs(Container,{maxWidth:\"lg\",style:{marginTop:80,marginBottom:32},children:[error&&/*#__PURE__*/_jsxs(Alert,{severity:\"error\",style:{marginBottom:16},children:[error,/*#__PURE__*/_jsx(Button,{onClick:fetchDashboardData,style:{marginLeft:16},children:\"Retry\"})]}),/*#__PURE__*/_jsxs(Box,{marginBottom:4,children:[/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:generateSampleData,disabled:loading,style:{marginRight:16},children:\"Generate Sample Data\"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:fetchDashboardData,disabled:loading,children:loading?'Refreshing...':'Refresh Data'})]}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,style:{marginBottom:32},children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:3,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(TrendingUp,{color:\"primary\",style:{marginRight:16,fontSize:40}}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",children:(stats===null||stats===void 0?void 0:stats.total_transactions)||0}),/*#__PURE__*/_jsx(Typography,{color:\"textSecondary\",children:\"Total Transactions\"})]})]})})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:3,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(Warning,{color:\"error\",style:{marginRight:16,fontSize:40}}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",children:(stats===null||stats===void 0?void 0:stats.fraud_transactions)||0}),/*#__PURE__*/_jsx(Typography,{color:\"textSecondary\",children:\"Fraud Detected\"})]})]})})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:3,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(Security,{color:\"warning\",style:{marginRight:16,fontSize:40}}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",children:(stats===null||stats===void 0?void 0:stats.pending_alerts)||0}),/*#__PURE__*/_jsx(Typography,{color:\"textSecondary\",children:\"Pending Alerts\"})]})]})})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:3,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(CheckCircle,{color:fraudRateColor,style:{marginRight:16,fontSize:40}}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h4\",children:[(stats===null||stats===void 0?void 0:stats.fraud_rate)||0,\"%\"]}),/*#__PURE__*/_jsx(Typography,{color:\"textSecondary\",children:\"Fraud Rate\"})]})]})})})})]}),/*#__PURE__*/_jsxs(Paper,{style:{padding:24},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,children:\"Recent Transactions\"}),recentTransactions.length===0?/*#__PURE__*/_jsx(Alert,{severity:\"info\",children:\"No transactions found. Generate some sample data to get started!\"}):/*#__PURE__*/_jsx(Box,{children:recentTransactions.map(transaction=>/*#__PURE__*/_jsx(Card,{style:{marginBottom:16},children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,alignItems:\"center\",children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:3,children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",children:[\"$\",transaction.amount.toFixed(2)]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:transaction.transaction_type})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:3,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:transaction.user_id}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"User ID\"})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:3,children:[/*#__PURE__*/_jsx(Chip,{label:transaction.is_fraud?'FRAUD':'LEGITIMATE',color:transaction.is_fraud?'error':'success',variant:transaction.is_fraud?'filled':'outlined',className:transaction.is_fraud?'fraud-alert':''}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"textSecondary\",children:[\"Score: \",(transaction.fraud_score*100).toFixed(1),\"%\"]})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:3,children:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:new Date(transaction.timestamp).toLocaleString()})})]})})},transaction.id))})]}),/*#__PURE__*/_jsxs(Dialog,{open:newTransactionOpen,onClose:()=>setNewTransactionOpen(false),maxWidth:\"sm\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Create New Transaction\"}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsx(TextField,{autoFocus:true,margin:\"dense\",label:\"Amount\",type:\"number\",fullWidth:true,variant:\"outlined\",value:newTransaction.amount,onChange:e=>setNewTransaction(_objectSpread(_objectSpread({},newTransaction),{},{amount:e.target.value})),style:{marginBottom:16}}),/*#__PURE__*/_jsx(TextField,{margin:\"dense\",label:\"User ID\",fullWidth:true,variant:\"outlined\",value:newTransaction.user_id,onChange:e=>setNewTransaction(_objectSpread(_objectSpread({},newTransaction),{},{user_id:e.target.value})),style:{marginBottom:16}}),/*#__PURE__*/_jsx(TextField,{margin:\"dense\",label:\"Merchant ID\",fullWidth:true,variant:\"outlined\",value:newTransaction.merchant_id,onChange:e=>setNewTransaction(_objectSpread(_objectSpread({},newTransaction),{},{merchant_id:e.target.value})),style:{marginBottom:16}}),/*#__PURE__*/_jsxs(TextField,{select:true,margin:\"dense\",label:\"Transaction Type\",fullWidth:true,variant:\"outlined\",value:newTransaction.transaction_type,onChange:e=>setNewTransaction(_objectSpread(_objectSpread({},newTransaction),{},{transaction_type:e.target.value})),SelectProps:{native:true},children:[/*#__PURE__*/_jsx(\"option\",{value:\"credit_card\",children:\"Credit Card\"}),/*#__PURE__*/_jsx(\"option\",{value:\"upi\",children:\"UPI\"}),/*#__PURE__*/_jsx(\"option\",{value:\"bank_transfer\",children:\"Bank Transfer\"})]})]}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setNewTransactionOpen(false),children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{onClick:createTransaction,variant:\"contained\",children:\"Create Transaction\"})]})]})]})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","Container","Grid","Paper","Typography","Box","Card","CardContent","CircularProgress","Alert","Button","Chip","AppBar","Toolbar","Dialog","DialogTitle","DialogContent","DialogActions","TextField","TrendingUp","Security","Warning","CheckCircle","Add","jsx","_jsx","jsxs","_jsxs","App","stats","setStats","recentTransactions","setRecentTransactions","loading","setLoading","error","setError","newTransactionOpen","setNewTransactionOpen","newTransaction","setNewTransaction","amount","user_id","merchant_id","transaction_type","API_BASE","fetchDashboardData","interval","setInterval","clearInterval","statsResponse","transactionsResponse","Promise","all","fetch","concat","statsData","json","transactionsData","transactions","err","generateSampleData","method","headers","body","JSON","stringify","count","createTransaction","response","parseFloat","ok","maxWidth","style","marginTop","children","display","flexDirection","alignItems","justifyContent","minHeight","size","variant","fraudRateColor","fraud_rate","position","component","flexGrow","color","onClick","marginRight","marginBottom","severity","marginLeft","disabled","container","spacing","item","xs","sm","md","fontSize","total_transactions","fraud_transactions","pending_alerts","padding","gutterBottom","length","map","transaction","toFixed","label","is_fraud","className","fraud_score","Date","timestamp","toLocaleString","id","open","onClose","fullWidth","autoFocus","margin","type","value","onChange","e","_objectSpread","target","select","SelectProps","native"],"sources":["C:/Users/KIIT0001/cursor projects/hackth/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CircularProgress,\r\n  Alert,\r\n  Button,\r\n  Chip,\r\n  AppBar,\r\n  Toolbar,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField\r\n} from '@mui/material';\r\nimport {\r\n  TrendingUp,\r\n  Security,\r\n  Warning,\r\n  CheckCircle,\r\n  Add\r\n} from '@mui/icons-material';\r\n\r\ninterface DashboardStats {\r\n  total_transactions: number;\r\n  fraud_transactions: number;\r\n  pending_alerts: number;\r\n  fraud_rate: number;\r\n}\r\n\r\ninterface Transaction {\r\n  id: number;\r\n  amount: number;\r\n  user_id: string;\r\n  merchant_id: string;\r\n  is_fraud: boolean;\r\n  fraud_score: number;\r\n  timestamp: string;\r\n  transaction_type: string;\r\n}\r\n\r\nconst App: React.FC = () => {\r\n  const [stats, setStats] = useState<DashboardStats | null>(null);\r\n  const [recentTransactions, setRecentTransactions] = useState<Transaction[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [newTransactionOpen, setNewTransactionOpen] = useState(false);\r\n  const [newTransaction, setNewTransaction] = useState({\r\n    amount: '',\r\n    user_id: '',\r\n    merchant_id: '',\r\n    transaction_type: 'credit_card'\r\n  });\r\n\r\n  const API_BASE = 'http://localhost:5000';\r\n\r\n  useEffect(() => {\r\n    fetchDashboardData();\r\n    const interval = setInterval(fetchDashboardData, 5000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const fetchDashboardData = async () => {\r\n    try {\r\n      const [statsResponse, transactionsResponse] = await Promise.all([\r\n        fetch(`${API_BASE}/api/dashboard/stats`),\r\n        fetch(`${API_BASE}/api/transactions/?per_page=10`)\r\n      ]);\r\n      \r\n      const statsData = await statsResponse.json();\r\n      const transactionsData = await transactionsResponse.json();\r\n      \r\n      setStats(statsData);\r\n      setRecentTransactions(transactionsData.transactions || []);\r\n      setLoading(false);\r\n      setError(null);\r\n    } catch (err) {\r\n      setError('Failed to connect to backend. Make sure the server is running on port 5000.');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const generateSampleData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      await fetch(`${API_BASE}/api/transactions/sample`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ count: 20 })\r\n      });\r\n      await fetchDashboardData();\r\n    } catch (err) {\r\n      setError('Failed to generate sample data');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const createTransaction = async () => {\r\n    try {\r\n      const response = await fetch(`${API_BASE}/api/transactions/`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          amount: parseFloat(newTransaction.amount),\r\n          user_id: newTransaction.user_id,\r\n          merchant_id: newTransaction.merchant_id,\r\n          transaction_type: newTransaction.transaction_type\r\n        })\r\n      });\r\n      \r\n      if (response.ok) {\r\n        setNewTransactionOpen(false);\r\n        setNewTransaction({ amount: '', user_id: '', merchant_id: '', transaction_type: 'credit_card' });\r\n        await fetchDashboardData();\r\n      }\r\n    } catch (err) {\r\n      setError('Failed to create transaction');\r\n    }\r\n  };\r\n\r\n  if (loading && !stats) {\r\n    return (\r\n      <Container maxWidth=\"lg\" style={{ marginTop: 64 }}>\r\n        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" minHeight=\"400px\">\r\n          <CircularProgress size={60} />\r\n          <Typography variant=\"h6\" style={{ marginTop: 16 }}>\r\n            Loading Fraud Detection Dashboard...\r\n          </Typography>\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  const fraudRateColor = stats && stats.fraud_rate > 10 ? 'error' : stats && stats.fraud_rate > 5 ? 'warning' : 'success';\r\n\r\n  return (\r\n    <div>\r\n      {/* Header */}\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" component=\"div\" style={{ flexGrow: 1 }}>\r\n            🛡️ Fraud Detection Dashboard - Hackathon 2025\r\n          </Typography>\r\n          <Button color=\"inherit\" onClick={() => setNewTransactionOpen(true)}>\r\n            <Add style={{ marginRight: 8 }} />\r\n            New Transaction\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Container maxWidth=\"lg\" style={{ marginTop: 80, marginBottom: 32 }}>\r\n        {error && (\r\n          <Alert severity=\"error\" style={{ marginBottom: 16 }}>\r\n            {error}\r\n            <Button onClick={fetchDashboardData} style={{ marginLeft: 16 }}>\r\n              Retry\r\n            </Button>\r\n          </Alert>\r\n        )}\r\n\r\n        {/* Action Buttons */}\r\n        <Box marginBottom={4}>\r\n          <Button \r\n            variant=\"contained\" \r\n            onClick={generateSampleData}\r\n            disabled={loading}\r\n            style={{ marginRight: 16 }}\r\n          >\r\n            Generate Sample Data\r\n          </Button>\r\n          <Button \r\n            variant=\"outlined\"\r\n            onClick={fetchDashboardData}\r\n            disabled={loading}\r\n          >\r\n            {loading ? 'Refreshing...' : 'Refresh Data'}\r\n          </Button>\r\n        </Box>\r\n\r\n        {/* Stats Cards */}\r\n        <Grid container spacing={3} style={{ marginBottom: 32 }}>\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                  <TrendingUp color=\"primary\" style={{ marginRight: 16, fontSize: 40 }} />\r\n                  <Box>\r\n                    <Typography variant=\"h4\">{stats?.total_transactions || 0}</Typography>\r\n                    <Typography color=\"textSecondary\">Total Transactions</Typography>\r\n                  </Box>\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                  <Warning color=\"error\" style={{ marginRight: 16, fontSize: 40 }} />\r\n                  <Box>\r\n                    <Typography variant=\"h4\">{stats?.fraud_transactions || 0}</Typography>\r\n                    <Typography color=\"textSecondary\">Fraud Detected</Typography>\r\n                  </Box>\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                  <Security color=\"warning\" style={{ marginRight: 16, fontSize: 40 }} />\r\n                  <Box>\r\n                    <Typography variant=\"h4\">{stats?.pending_alerts || 0}</Typography>\r\n                    <Typography color=\"textSecondary\">Pending Alerts</Typography>\r\n                  </Box>\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <Card>\r\n              <CardContent>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                  <CheckCircle color={fraudRateColor} style={{ marginRight: 16, fontSize: 40 }} />\r\n                  <Box>\r\n                    <Typography variant=\"h4\">{stats?.fraud_rate || 0}%</Typography>\r\n                    <Typography color=\"textSecondary\">Fraud Rate</Typography>\r\n                  </Box>\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* Recent Transactions */}\r\n        <Paper style={{ padding: 24 }}>\r\n          <Typography variant=\"h5\" gutterBottom>\r\n            Recent Transactions\r\n          </Typography>\r\n          \r\n          {recentTransactions.length === 0 ? (\r\n            <Alert severity=\"info\">\r\n              No transactions found. Generate some sample data to get started!\r\n            </Alert>\r\n          ) : (\r\n            <Box>\r\n              {recentTransactions.map((transaction) => (\r\n                <Card key={transaction.id} style={{ marginBottom: 16 }}>\r\n                  <CardContent>\r\n                    <Grid container spacing={2} alignItems=\"center\">\r\n                      <Grid item xs={12} sm={3}>\r\n                        <Typography variant=\"h6\">\r\n                          ${transaction.amount.toFixed(2)}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\">\r\n                          {transaction.transaction_type}\r\n                        </Typography>\r\n                      </Grid>\r\n                      \r\n                      <Grid item xs={12} sm={3}>\r\n                        <Typography variant=\"body1\">\r\n                          {transaction.user_id}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\">\r\n                          User ID\r\n                        </Typography>\r\n                      </Grid>\r\n                      \r\n                      <Grid item xs={12} sm={3}>\r\n                        <Chip \r\n                          label={transaction.is_fraud ? 'FRAUD' : 'LEGITIMATE'}\r\n                          color={transaction.is_fraud ? 'error' : 'success'}\r\n                          variant={transaction.is_fraud ? 'filled' : 'outlined'}\r\n                          className={transaction.is_fraud ? 'fraud-alert' : ''}\r\n                        />\r\n                        <Typography variant=\"body2\" color=\"textSecondary\">\r\n                          Score: {(transaction.fraud_score * 100).toFixed(1)}%\r\n                        </Typography>\r\n                      </Grid>\r\n                      \r\n                      <Grid item xs={12} sm={3}>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\">\r\n                          {new Date(transaction.timestamp).toLocaleString()}\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </CardContent>\r\n                </Card>\r\n              ))}\r\n            </Box>\r\n          )}\r\n        </Paper>\r\n\r\n        {/* New Transaction Dialog */}\r\n        <Dialog open={newTransactionOpen} onClose={() => setNewTransactionOpen(false)} maxWidth=\"sm\" fullWidth>\r\n          <DialogTitle>Create New Transaction</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              label=\"Amount\"\r\n              type=\"number\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={newTransaction.amount}\r\n              onChange={(e) => setNewTransaction({ ...newTransaction, amount: e.target.value })}\r\n              style={{ marginBottom: 16 }}\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              label=\"User ID\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={newTransaction.user_id}\r\n              onChange={(e) => setNewTransaction({ ...newTransaction, user_id: e.target.value })}\r\n              style={{ marginBottom: 16 }}\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              label=\"Merchant ID\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={newTransaction.merchant_id}\r\n              onChange={(e) => setNewTransaction({ ...newTransaction, merchant_id: e.target.value })}\r\n              style={{ marginBottom: 16 }}\r\n            />\r\n            <TextField\r\n              select\r\n              margin=\"dense\"\r\n              label=\"Transaction Type\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={newTransaction.transaction_type}\r\n              onChange={(e) => setNewTransaction({ ...newTransaction, transaction_type: e.target.value })}\r\n              SelectProps={{\r\n                native: true,\r\n              }}\r\n            >\r\n              <option value=\"credit_card\">Credit Card</option>\r\n              <option value=\"upi\">UPI</option>\r\n              <option value=\"bank_transfer\">Bank Transfer</option>\r\n            </TextField>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setNewTransactionOpen(false)}>Cancel</Button>\r\n            <Button onClick={createTransaction} variant=\"contained\">Create Transaction</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"sIAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OACEC,SAAS,CACTC,IAAI,CACJC,KAAK,CACLC,UAAU,CACVC,GAAG,CACHC,IAAI,CACJC,WAAW,CACXC,gBAAgB,CAChBC,KAAK,CACLC,MAAM,CACNC,IAAI,CACJC,MAAM,CACNC,OAAO,CACPC,MAAM,CACNC,WAAW,CACXC,aAAa,CACbC,aAAa,CACbC,SAAS,KACJ,eAAe,CACtB,OACEC,UAAU,CACVC,QAAQ,CACRC,OAAO,CACPC,WAAW,CACXC,GAAG,KACE,qBAAqB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAoB7B,KAAM,CAAAC,GAAa,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAG/B,QAAQ,CAAwB,IAAI,CAAC,CAC/D,KAAM,CAACgC,kBAAkB,CAAEC,qBAAqB,CAAC,CAAGjC,QAAQ,CAAgB,EAAE,CAAC,CAC/E,KAAM,CAACkC,OAAO,CAAEC,UAAU,CAAC,CAAGnC,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACoC,KAAK,CAAEC,QAAQ,CAAC,CAAGrC,QAAQ,CAAgB,IAAI,CAAC,CACvD,KAAM,CAACsC,kBAAkB,CAAEC,qBAAqB,CAAC,CAAGvC,QAAQ,CAAC,KAAK,CAAC,CACnE,KAAM,CAACwC,cAAc,CAAEC,iBAAiB,CAAC,CAAGzC,QAAQ,CAAC,CACnD0C,MAAM,CAAE,EAAE,CACVC,OAAO,CAAE,EAAE,CACXC,WAAW,CAAE,EAAE,CACfC,gBAAgB,CAAE,aACpB,CAAC,CAAC,CAEF,KAAM,CAAAC,QAAQ,CAAG,uBAAuB,CAExC7C,SAAS,CAAC,IAAM,CACd8C,kBAAkB,CAAC,CAAC,CACpB,KAAM,CAAAC,QAAQ,CAAGC,WAAW,CAACF,kBAAkB,CAAE,IAAI,CAAC,CACtD,MAAO,IAAMG,aAAa,CAACF,QAAQ,CAAC,CACtC,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAD,kBAAkB,CAAG,KAAAA,CAAA,GAAY,CACrC,GAAI,CACF,KAAM,CAACI,aAAa,CAAEC,oBAAoB,CAAC,CAAG,KAAM,CAAAC,OAAO,CAACC,GAAG,CAAC,CAC9DC,KAAK,IAAAC,MAAA,CAAIV,QAAQ,wBAAsB,CAAC,CACxCS,KAAK,IAAAC,MAAA,CAAIV,QAAQ,kCAAgC,CAAC,CACnD,CAAC,CAEF,KAAM,CAAAW,SAAS,CAAG,KAAM,CAAAN,aAAa,CAACO,IAAI,CAAC,CAAC,CAC5C,KAAM,CAAAC,gBAAgB,CAAG,KAAM,CAAAP,oBAAoB,CAACM,IAAI,CAAC,CAAC,CAE1D3B,QAAQ,CAAC0B,SAAS,CAAC,CACnBxB,qBAAqB,CAAC0B,gBAAgB,CAACC,YAAY,EAAI,EAAE,CAAC,CAC1DzB,UAAU,CAAC,KAAK,CAAC,CACjBE,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAE,MAAOwB,GAAG,CAAE,CACZxB,QAAQ,CAAC,6EAA6E,CAAC,CACvFF,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,KAAM,CAAA2B,kBAAkB,CAAG,KAAAA,CAAA,GAAY,CACrC,GAAI,CACF3B,UAAU,CAAC,IAAI,CAAC,CAChB,KAAM,CAAAoB,KAAK,IAAAC,MAAA,CAAIV,QAAQ,6BAA4B,CACjDiB,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEC,KAAK,CAAE,EAAG,CAAC,CACpC,CAAC,CAAC,CACF,KAAM,CAAArB,kBAAkB,CAAC,CAAC,CAC5B,CAAE,MAAOc,GAAG,CAAE,CACZxB,QAAQ,CAAC,gCAAgC,CAAC,CAC1CF,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,KAAM,CAAAkC,iBAAiB,CAAG,KAAAA,CAAA,GAAY,CACpC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAf,KAAK,IAAAC,MAAA,CAAIV,QAAQ,uBAAsB,CAC5DiB,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBzB,MAAM,CAAE6B,UAAU,CAAC/B,cAAc,CAACE,MAAM,CAAC,CACzCC,OAAO,CAAEH,cAAc,CAACG,OAAO,CAC/BC,WAAW,CAAEJ,cAAc,CAACI,WAAW,CACvCC,gBAAgB,CAAEL,cAAc,CAACK,gBACnC,CAAC,CACH,CAAC,CAAC,CAEF,GAAIyB,QAAQ,CAACE,EAAE,CAAE,CACfjC,qBAAqB,CAAC,KAAK,CAAC,CAC5BE,iBAAiB,CAAC,CAAEC,MAAM,CAAE,EAAE,CAAEC,OAAO,CAAE,EAAE,CAAEC,WAAW,CAAE,EAAE,CAAEC,gBAAgB,CAAE,aAAc,CAAC,CAAC,CAChG,KAAM,CAAAE,kBAAkB,CAAC,CAAC,CAC5B,CACF,CAAE,MAAOc,GAAG,CAAE,CACZxB,QAAQ,CAAC,8BAA8B,CAAC,CAC1C,CACF,CAAC,CAED,GAAIH,OAAO,EAAI,CAACJ,KAAK,CAAE,CACrB,mBACEJ,IAAA,CAACxB,SAAS,EAACuE,QAAQ,CAAC,IAAI,CAACC,KAAK,CAAE,CAAEC,SAAS,CAAE,EAAG,CAAE,CAAAC,QAAA,cAChDhD,KAAA,CAACtB,GAAG,EAACuE,OAAO,CAAC,MAAM,CAACC,aAAa,CAAC,QAAQ,CAACC,UAAU,CAAC,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAACC,SAAS,CAAC,OAAO,CAAAL,QAAA,eACtGlD,IAAA,CAACjB,gBAAgB,EAACyE,IAAI,CAAE,EAAG,CAAE,CAAC,cAC9BxD,IAAA,CAACrB,UAAU,EAAC8E,OAAO,CAAC,IAAI,CAACT,KAAK,CAAE,CAAEC,SAAS,CAAE,EAAG,CAAE,CAAAC,QAAA,CAAC,sCAEnD,CAAY,CAAC,EACV,CAAC,CACG,CAAC,CAEhB,CAEA,KAAM,CAAAQ,cAAc,CAAGtD,KAAK,EAAIA,KAAK,CAACuD,UAAU,CAAG,EAAE,CAAG,OAAO,CAAGvD,KAAK,EAAIA,KAAK,CAACuD,UAAU,CAAG,CAAC,CAAG,SAAS,CAAG,SAAS,CAEvH,mBACEzD,KAAA,QAAAgD,QAAA,eAEElD,IAAA,CAACb,MAAM,EAACyE,QAAQ,CAAC,OAAO,CAAAV,QAAA,cACtBhD,KAAA,CAACd,OAAO,EAAA8D,QAAA,eACNlD,IAAA,CAACrB,UAAU,EAAC8E,OAAO,CAAC,IAAI,CAACI,SAAS,CAAC,KAAK,CAACb,KAAK,CAAE,CAAEc,QAAQ,CAAE,CAAE,CAAE,CAAAZ,QAAA,CAAC,+DAEjE,CAAY,CAAC,cACbhD,KAAA,CAACjB,MAAM,EAAC8E,KAAK,CAAC,SAAS,CAACC,OAAO,CAAEA,CAAA,GAAMnD,qBAAqB,CAAC,IAAI,CAAE,CAAAqC,QAAA,eACjElD,IAAA,CAACF,GAAG,EAACkD,KAAK,CAAE,CAAEiB,WAAW,CAAE,CAAE,CAAE,CAAE,CAAC,kBAEpC,EAAQ,CAAC,EACF,CAAC,CACJ,CAAC,cAET/D,KAAA,CAAC1B,SAAS,EAACuE,QAAQ,CAAC,IAAI,CAACC,KAAK,CAAE,CAAEC,SAAS,CAAE,EAAE,CAAEiB,YAAY,CAAE,EAAG,CAAE,CAAAhB,QAAA,EACjExC,KAAK,eACJR,KAAA,CAAClB,KAAK,EAACmF,QAAQ,CAAC,OAAO,CAACnB,KAAK,CAAE,CAAEkB,YAAY,CAAE,EAAG,CAAE,CAAAhB,QAAA,EACjDxC,KAAK,cACNV,IAAA,CAACf,MAAM,EAAC+E,OAAO,CAAE3C,kBAAmB,CAAC2B,KAAK,CAAE,CAAEoB,UAAU,CAAE,EAAG,CAAE,CAAAlB,QAAA,CAAC,OAEhE,CAAQ,CAAC,EACJ,CACR,cAGDhD,KAAA,CAACtB,GAAG,EAACsF,YAAY,CAAE,CAAE,CAAAhB,QAAA,eACnBlD,IAAA,CAACf,MAAM,EACLwE,OAAO,CAAC,WAAW,CACnBO,OAAO,CAAE5B,kBAAmB,CAC5BiC,QAAQ,CAAE7D,OAAQ,CAClBwC,KAAK,CAAE,CAAEiB,WAAW,CAAE,EAAG,CAAE,CAAAf,QAAA,CAC5B,sBAED,CAAQ,CAAC,cACTlD,IAAA,CAACf,MAAM,EACLwE,OAAO,CAAC,UAAU,CAClBO,OAAO,CAAE3C,kBAAmB,CAC5BgD,QAAQ,CAAE7D,OAAQ,CAAA0C,QAAA,CAEjB1C,OAAO,CAAG,eAAe,CAAG,cAAc,CACrC,CAAC,EACN,CAAC,cAGNN,KAAA,CAACzB,IAAI,EAAC6F,SAAS,MAACC,OAAO,CAAE,CAAE,CAACvB,KAAK,CAAE,CAAEkB,YAAY,CAAE,EAAG,CAAE,CAAAhB,QAAA,eACtDlD,IAAA,CAACvB,IAAI,EAAC+F,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAACC,EAAE,CAAE,CAAE,CAAAzB,QAAA,cAC9BlD,IAAA,CAACnB,IAAI,EAAAqE,QAAA,cACHlD,IAAA,CAAClB,WAAW,EAAAoE,QAAA,cACVhD,KAAA,CAACtB,GAAG,EAACuE,OAAO,CAAC,MAAM,CAACE,UAAU,CAAC,QAAQ,CAAAH,QAAA,eACrClD,IAAA,CAACN,UAAU,EAACqE,KAAK,CAAC,SAAS,CAACf,KAAK,CAAE,CAAEiB,WAAW,CAAE,EAAE,CAAEW,QAAQ,CAAE,EAAG,CAAE,CAAE,CAAC,cACxE1E,KAAA,CAACtB,GAAG,EAAAsE,QAAA,eACFlD,IAAA,CAACrB,UAAU,EAAC8E,OAAO,CAAC,IAAI,CAAAP,QAAA,CAAE,CAAA9C,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAEyE,kBAAkB,GAAI,CAAC,CAAa,CAAC,cACtE7E,IAAA,CAACrB,UAAU,EAACoF,KAAK,CAAC,eAAe,CAAAb,QAAA,CAAC,oBAAkB,CAAY,CAAC,EAC9D,CAAC,EACH,CAAC,CACK,CAAC,CACV,CAAC,CACH,CAAC,cAEPlD,IAAA,CAACvB,IAAI,EAAC+F,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAACC,EAAE,CAAE,CAAE,CAAAzB,QAAA,cAC9BlD,IAAA,CAACnB,IAAI,EAAAqE,QAAA,cACHlD,IAAA,CAAClB,WAAW,EAAAoE,QAAA,cACVhD,KAAA,CAACtB,GAAG,EAACuE,OAAO,CAAC,MAAM,CAACE,UAAU,CAAC,QAAQ,CAAAH,QAAA,eACrClD,IAAA,CAACJ,OAAO,EAACmE,KAAK,CAAC,OAAO,CAACf,KAAK,CAAE,CAAEiB,WAAW,CAAE,EAAE,CAAEW,QAAQ,CAAE,EAAG,CAAE,CAAE,CAAC,cACnE1E,KAAA,CAACtB,GAAG,EAAAsE,QAAA,eACFlD,IAAA,CAACrB,UAAU,EAAC8E,OAAO,CAAC,IAAI,CAAAP,QAAA,CAAE,CAAA9C,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAE0E,kBAAkB,GAAI,CAAC,CAAa,CAAC,cACtE9E,IAAA,CAACrB,UAAU,EAACoF,KAAK,CAAC,eAAe,CAAAb,QAAA,CAAC,gBAAc,CAAY,CAAC,EAC1D,CAAC,EACH,CAAC,CACK,CAAC,CACV,CAAC,CACH,CAAC,cAEPlD,IAAA,CAACvB,IAAI,EAAC+F,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAACC,EAAE,CAAE,CAAE,CAAAzB,QAAA,cAC9BlD,IAAA,CAACnB,IAAI,EAAAqE,QAAA,cACHlD,IAAA,CAAClB,WAAW,EAAAoE,QAAA,cACVhD,KAAA,CAACtB,GAAG,EAACuE,OAAO,CAAC,MAAM,CAACE,UAAU,CAAC,QAAQ,CAAAH,QAAA,eACrClD,IAAA,CAACL,QAAQ,EAACoE,KAAK,CAAC,SAAS,CAACf,KAAK,CAAE,CAAEiB,WAAW,CAAE,EAAE,CAAEW,QAAQ,CAAE,EAAG,CAAE,CAAE,CAAC,cACtE1E,KAAA,CAACtB,GAAG,EAAAsE,QAAA,eACFlD,IAAA,CAACrB,UAAU,EAAC8E,OAAO,CAAC,IAAI,CAAAP,QAAA,CAAE,CAAA9C,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAE2E,cAAc,GAAI,CAAC,CAAa,CAAC,cAClE/E,IAAA,CAACrB,UAAU,EAACoF,KAAK,CAAC,eAAe,CAAAb,QAAA,CAAC,gBAAc,CAAY,CAAC,EAC1D,CAAC,EACH,CAAC,CACK,CAAC,CACV,CAAC,CACH,CAAC,cAEPlD,IAAA,CAACvB,IAAI,EAAC+F,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAACC,EAAE,CAAE,CAAE,CAAAzB,QAAA,cAC9BlD,IAAA,CAACnB,IAAI,EAAAqE,QAAA,cACHlD,IAAA,CAAClB,WAAW,EAAAoE,QAAA,cACVhD,KAAA,CAACtB,GAAG,EAACuE,OAAO,CAAC,MAAM,CAACE,UAAU,CAAC,QAAQ,CAAAH,QAAA,eACrClD,IAAA,CAACH,WAAW,EAACkE,KAAK,CAAEL,cAAe,CAACV,KAAK,CAAE,CAAEiB,WAAW,CAAE,EAAE,CAAEW,QAAQ,CAAE,EAAG,CAAE,CAAE,CAAC,cAChF1E,KAAA,CAACtB,GAAG,EAAAsE,QAAA,eACFhD,KAAA,CAACvB,UAAU,EAAC8E,OAAO,CAAC,IAAI,CAAAP,QAAA,EAAE,CAAA9C,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAEuD,UAAU,GAAI,CAAC,CAAC,GAAC,EAAY,CAAC,cAC/D3D,IAAA,CAACrB,UAAU,EAACoF,KAAK,CAAC,eAAe,CAAAb,QAAA,CAAC,YAAU,CAAY,CAAC,EACtD,CAAC,EACH,CAAC,CACK,CAAC,CACV,CAAC,CACH,CAAC,EACH,CAAC,cAGPhD,KAAA,CAACxB,KAAK,EAACsE,KAAK,CAAE,CAAEgC,OAAO,CAAE,EAAG,CAAE,CAAA9B,QAAA,eAC5BlD,IAAA,CAACrB,UAAU,EAAC8E,OAAO,CAAC,IAAI,CAACwB,YAAY,MAAA/B,QAAA,CAAC,qBAEtC,CAAY,CAAC,CAEZ5C,kBAAkB,CAAC4E,MAAM,GAAK,CAAC,cAC9BlF,IAAA,CAAChB,KAAK,EAACmF,QAAQ,CAAC,MAAM,CAAAjB,QAAA,CAAC,kEAEvB,CAAO,CAAC,cAERlD,IAAA,CAACpB,GAAG,EAAAsE,QAAA,CACD5C,kBAAkB,CAAC6E,GAAG,CAAEC,WAAW,eAClCpF,IAAA,CAACnB,IAAI,EAAsBmE,KAAK,CAAE,CAAEkB,YAAY,CAAE,EAAG,CAAE,CAAAhB,QAAA,cACrDlD,IAAA,CAAClB,WAAW,EAAAoE,QAAA,cACVhD,KAAA,CAACzB,IAAI,EAAC6F,SAAS,MAACC,OAAO,CAAE,CAAE,CAAClB,UAAU,CAAC,QAAQ,CAAAH,QAAA,eAC7ChD,KAAA,CAACzB,IAAI,EAAC+F,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAxB,QAAA,eACvBhD,KAAA,CAACvB,UAAU,EAAC8E,OAAO,CAAC,IAAI,CAAAP,QAAA,EAAC,GACtB,CAACkC,WAAW,CAACpE,MAAM,CAACqE,OAAO,CAAC,CAAC,CAAC,EACrB,CAAC,cACbrF,IAAA,CAACrB,UAAU,EAAC8E,OAAO,CAAC,OAAO,CAACM,KAAK,CAAC,eAAe,CAAAb,QAAA,CAC9CkC,WAAW,CAACjE,gBAAgB,CACnB,CAAC,EACT,CAAC,cAEPjB,KAAA,CAACzB,IAAI,EAAC+F,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAxB,QAAA,eACvBlD,IAAA,CAACrB,UAAU,EAAC8E,OAAO,CAAC,OAAO,CAAAP,QAAA,CACxBkC,WAAW,CAACnE,OAAO,CACV,CAAC,cACbjB,IAAA,CAACrB,UAAU,EAAC8E,OAAO,CAAC,OAAO,CAACM,KAAK,CAAC,eAAe,CAAAb,QAAA,CAAC,SAElD,CAAY,CAAC,EACT,CAAC,cAEPhD,KAAA,CAACzB,IAAI,EAAC+F,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAxB,QAAA,eACvBlD,IAAA,CAACd,IAAI,EACHoG,KAAK,CAAEF,WAAW,CAACG,QAAQ,CAAG,OAAO,CAAG,YAAa,CACrDxB,KAAK,CAAEqB,WAAW,CAACG,QAAQ,CAAG,OAAO,CAAG,SAAU,CAClD9B,OAAO,CAAE2B,WAAW,CAACG,QAAQ,CAAG,QAAQ,CAAG,UAAW,CACtDC,SAAS,CAAEJ,WAAW,CAACG,QAAQ,CAAG,aAAa,CAAG,EAAG,CACtD,CAAC,cACFrF,KAAA,CAACvB,UAAU,EAAC8E,OAAO,CAAC,OAAO,CAACM,KAAK,CAAC,eAAe,CAAAb,QAAA,EAAC,SACzC,CAAC,CAACkC,WAAW,CAACK,WAAW,CAAG,GAAG,EAAEJ,OAAO,CAAC,CAAC,CAAC,CAAC,GACrD,EAAY,CAAC,EACT,CAAC,cAEPrF,IAAA,CAACvB,IAAI,EAAC+F,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAxB,QAAA,cACvBlD,IAAA,CAACrB,UAAU,EAAC8E,OAAO,CAAC,OAAO,CAACM,KAAK,CAAC,eAAe,CAAAb,QAAA,CAC9C,GAAI,CAAAwC,IAAI,CAACN,WAAW,CAACO,SAAS,CAAC,CAACC,cAAc,CAAC,CAAC,CACvC,CAAC,CACT,CAAC,EACH,CAAC,CACI,CAAC,EAvCLR,WAAW,CAACS,EAwCjB,CACP,CAAC,CACC,CACN,EACI,CAAC,cAGR3F,KAAA,CAACb,MAAM,EAACyG,IAAI,CAAElF,kBAAmB,CAACmF,OAAO,CAAEA,CAAA,GAAMlF,qBAAqB,CAAC,KAAK,CAAE,CAACkC,QAAQ,CAAC,IAAI,CAACiD,SAAS,MAAA9C,QAAA,eACpGlD,IAAA,CAACV,WAAW,EAAA4D,QAAA,CAAC,wBAAsB,CAAa,CAAC,cACjDhD,KAAA,CAACX,aAAa,EAAA2D,QAAA,eACZlD,IAAA,CAACP,SAAS,EACRwG,SAAS,MACTC,MAAM,CAAC,OAAO,CACdZ,KAAK,CAAC,QAAQ,CACda,IAAI,CAAC,QAAQ,CACbH,SAAS,MACTvC,OAAO,CAAC,UAAU,CAClB2C,KAAK,CAAEtF,cAAc,CAACE,MAAO,CAC7BqF,QAAQ,CAAGC,CAAC,EAAKvF,iBAAiB,CAAAwF,aAAA,CAAAA,aAAA,IAAMzF,cAAc,MAAEE,MAAM,CAAEsF,CAAC,CAACE,MAAM,CAACJ,KAAK,EAAE,CAAE,CAClFpD,KAAK,CAAE,CAAEkB,YAAY,CAAE,EAAG,CAAE,CAC7B,CAAC,cACFlE,IAAA,CAACP,SAAS,EACRyG,MAAM,CAAC,OAAO,CACdZ,KAAK,CAAC,SAAS,CACfU,SAAS,MACTvC,OAAO,CAAC,UAAU,CAClB2C,KAAK,CAAEtF,cAAc,CAACG,OAAQ,CAC9BoF,QAAQ,CAAGC,CAAC,EAAKvF,iBAAiB,CAAAwF,aAAA,CAAAA,aAAA,IAAMzF,cAAc,MAAEG,OAAO,CAAEqF,CAAC,CAACE,MAAM,CAACJ,KAAK,EAAE,CAAE,CACnFpD,KAAK,CAAE,CAAEkB,YAAY,CAAE,EAAG,CAAE,CAC7B,CAAC,cACFlE,IAAA,CAACP,SAAS,EACRyG,MAAM,CAAC,OAAO,CACdZ,KAAK,CAAC,aAAa,CACnBU,SAAS,MACTvC,OAAO,CAAC,UAAU,CAClB2C,KAAK,CAAEtF,cAAc,CAACI,WAAY,CAClCmF,QAAQ,CAAGC,CAAC,EAAKvF,iBAAiB,CAAAwF,aAAA,CAAAA,aAAA,IAAMzF,cAAc,MAAEI,WAAW,CAAEoF,CAAC,CAACE,MAAM,CAACJ,KAAK,EAAE,CAAE,CACvFpD,KAAK,CAAE,CAAEkB,YAAY,CAAE,EAAG,CAAE,CAC7B,CAAC,cACFhE,KAAA,CAACT,SAAS,EACRgH,MAAM,MACNP,MAAM,CAAC,OAAO,CACdZ,KAAK,CAAC,kBAAkB,CACxBU,SAAS,MACTvC,OAAO,CAAC,UAAU,CAClB2C,KAAK,CAAEtF,cAAc,CAACK,gBAAiB,CACvCkF,QAAQ,CAAGC,CAAC,EAAKvF,iBAAiB,CAAAwF,aAAA,CAAAA,aAAA,IAAMzF,cAAc,MAAEK,gBAAgB,CAAEmF,CAAC,CAACE,MAAM,CAACJ,KAAK,EAAE,CAAE,CAC5FM,WAAW,CAAE,CACXC,MAAM,CAAE,IACV,CAAE,CAAAzD,QAAA,eAEFlD,IAAA,WAAQoG,KAAK,CAAC,aAAa,CAAAlD,QAAA,CAAC,aAAW,CAAQ,CAAC,cAChDlD,IAAA,WAAQoG,KAAK,CAAC,KAAK,CAAAlD,QAAA,CAAC,KAAG,CAAQ,CAAC,cAChClD,IAAA,WAAQoG,KAAK,CAAC,eAAe,CAAAlD,QAAA,CAAC,eAAa,CAAQ,CAAC,EAC3C,CAAC,EACC,CAAC,cAChBhD,KAAA,CAACV,aAAa,EAAA0D,QAAA,eACZlD,IAAA,CAACf,MAAM,EAAC+E,OAAO,CAAEA,CAAA,GAAMnD,qBAAqB,CAAC,KAAK,CAAE,CAAAqC,QAAA,CAAC,QAAM,CAAQ,CAAC,cACpElD,IAAA,CAACf,MAAM,EAAC+E,OAAO,CAAErB,iBAAkB,CAACc,OAAO,CAAC,WAAW,CAAAP,QAAA,CAAC,oBAAkB,CAAQ,CAAC,EACtE,CAAC,EACV,CAAC,EACA,CAAC,EACT,CAAC,CAEV,CAAC,CAED,cAAe,CAAA/C,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}